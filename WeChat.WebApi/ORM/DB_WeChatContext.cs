// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using WeChat.WebApi.ORM.Models;

namespace WeChat.WebApi.ORM
{
    public partial class DB_WeChatContext : DbContext
    {
        public DB_WeChatContext()
        {
        }

        public DB_WeChatContext(DbContextOptions<DB_WeChatContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TbAccount> TbAccount { get; set; }
        public virtual DbSet<TbApiLog> TbApiLog { get; set; }
        public virtual DbSet<TbChatLog> TbChatLog { get; set; }
        public virtual DbSet<TbUser> TbUser { get; set; }
        public virtual DbSet<TbRelation> TbRelation { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TbAccount>(entity =>
            {
                entity.HasKey(e => e.Quid)
                    .HasName("PK_TB_Account_1");

                entity.ToTable("TB_Account");

                entity.Property(e => e.Quid)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Hash)
                    .IsRequired()
                    .HasMaxLength(16);
            });

            modelBuilder.Entity<TbApiLog>(entity =>
            {
                entity.HasKey(e => e.Index);

                entity.ToTable("TB_ApiLog");

                entity.Property(e => e.Action)
                    .IsRequired()
                    .HasMaxLength(32)
                    .IsFixedLength();

                entity.Property(e => e.Address)
                    .HasMaxLength(32)
                    .IsFixedLength();

                entity.Property(e => e.Guid)
                    .HasMaxLength(11)
                    .IsFixedLength();

                entity.Property(e => e.Ip)
                    .HasMaxLength(16)
                    .HasColumnName("IP")
                    .IsFixedLength();

                entity.Property(e => e.LogTime).HasColumnType("datetime");

                entity.Property(e => e.Region)
                    .IsRequired()
                    .HasMaxLength(32)
                    .IsFixedLength();
            });

            modelBuilder.Entity<TbChatLog>(entity =>
            {
                entity.HasKey(e => e.Guid);

                entity.ToTable("TB_ChatLog");

                entity.Property(e => e.Guid)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Action)
                    .IsRequired()
                    .HasMaxLength(32)
                    .IsFixedLength();

                entity.Property(e => e.Receiever)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.SendTime).HasColumnType("datetime");

                entity.Property(e => e.Sender)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsFixedLength();
            });

            modelBuilder.Entity<TbUser>(entity =>
            {
                entity.HasKey(e => e.Quid)
                    .HasName("PK_TB_User_1");

                entity.ToTable("TB_User");

                entity.Property(e => e.Quid)
                    .HasMaxLength(10)
                    .IsFixedLength();

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsFixedLength();

                entity.Property(e => e.Phone)
                    .IsRequired()
                    .HasMaxLength(11)
                    .IsFixedLength();
            });

            modelBuilder.Entity<TbRelation>(entity =>
            {
                entity.HasKey(e => e.Index);

                entity.ToTable("TB_Relation");

                entity.Property(e=>e.RelationFrom)
                    .HasMaxLength(10)
                    .IsRequired();

                entity.Property(e => e.RelationTo)
                    .HasMaxLength(10)
                    .IsRequired();
                
            });
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}